{"version":3,"sources":["components/layouts/Navbar.js","components/client/HeaderClient.js","components/layouts/Spinner.js","components/client/Clients.js","components/client/AddClient.js","components/layouts/ListItem.js","components/client/Client.js","components/auth/SignUp.js","components/auth/Login.js","components/layouts/About.js","components/layouts/Error404.js","App.js","store/store.js","index.js"],"names":["compose","firebaseConnect","connect","state","auth","firebase","props","react_default","a","createElement","className","Link","to","type","data-toggle","data-target","id","uid","Fragment","renderMenu","email","onClick","logout","onLogoutClick","href","renderLogInLogOut","HeaderClient","showTargetForm","target","_this","targetFirestore","editedTarget","renderMonth","Date","getMonth","toUpperCase","renderYear","getFullYear","formatNumber","num","toFixed","replace","renderTotalSale","total","percent","Math","floor","onChange","e","setState","value","targetSubmit","_this$state","firestore","preventDefault","updatedTarget","saleTarget","parseFloat","update","collection","doc","renderTargetForm","_this$state2","onSubmit","name","placeholder","renderTarget","_this2","this","Component","firestoreConnect","ordered","Spinner","style","width","height","role","sumTotalSale","clients","reduce","acc","client","saleAmount","orderBy","client_HeaderClient","map","key","company","customerProduct","tier","concat","renderClients","Redirect","layouts_Spinner","AddClient","customerName","phone","Object","defineProperty","OnSubmitAdd","_this$props","history","newClient","objectSpread","add","then","push","htmlFor","required","maxLength","autoComplete","ListItem","_ref","parentState","defaultProps","Client","showEdit","didUpdate","onUpdateSubmit","updatedClient","toggleEdit","onDeleteClick","_this$props2","delete","layouts_ListItem","storeAs","match","params","ownProps","SignUp","password","confirmPassword","samePassword","error","onSignUpSubmit","createUser","catch","err","message","minLength","Login","onSignInSubmit","login","res","class","About","rel","Error404","App","BrowserRouter","basename","process","layouts_Navbar","Switch","Route","path","exact","component","Clients","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8023e9e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Logout from firebase\r\nconst onLogoutClick = firebase => {\r\n  firebase.logout();\r\n};\r\n\r\n// If user is logged dont' show sign out button ;else show sign in button\r\nconst renderLogInLogOut = (auth, firebase) => {\r\n  if (auth.uid) {\r\n    return (\r\n      <>\r\n        <li className=\"nav-item mr-3\">\r\n          <span className=\"btn btn-danger text-white\">{auth.email}</span>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a\r\n            onClick={() => onLogoutClick(firebase)}\r\n            href=\"#!\"\r\n            to=\"/login\"\r\n            className=\"nav-link\"\r\n          >\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/signup\" className=\"nav-link\">\r\n            Signup\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/login\" className=\"nav-link\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\n// Render menu depends on user logged or not\r\nconst renderMenu = auth => {\r\n  if (auth.uid) {\r\n    return (\r\n      <>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            <i className=\"fas fa-home\" /> Home\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/clients/add\" className=\"nav-link\">\r\n            <i className=\"fas fa-plus\" /> Add Client\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question\" /> About\r\n          </Link>\r\n        </li>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/about\" className=\"nav-link\">\r\n          <i className=\"fas fa-question\" /> About\r\n        </Link>\r\n      </li>\r\n    );\r\n  }\r\n};\r\n\r\nconst Navbar = props => {\r\n  const { auth, firebase } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-5\">\r\n      <div className=\"container py-2\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <span className=\"text-info\">\r\n            <i className=\"fas fa-users mr-1\" />\r\n          </span>\r\n          {'  '}\r\n          Client Manager\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbar\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n          <ul className=\"navbar-nav mr-auto\">{renderMenu(auth)}</ul>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            {renderLogInLogOut(auth, firebase)}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HeaderClient extends Component {\r\n  // Init state\r\n  // target is comming from the firestore or default is 0\r\n  state = {\r\n    showTargetForm: false,\r\n    target: this.props.targetFirestore || 0,\r\n    editedTarget: 0\r\n  };\r\n\r\n  // render real time Month\r\n  renderMonth = () => {\r\n    const month = new Date().getMonth();\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'Octobe',\r\n      'November',\r\n      'December'\r\n    ];\r\n    return months[month].toUpperCase();\r\n  };\r\n\r\n  // render real time year\r\n  renderYear = () => {\r\n    return new Date().getFullYear();\r\n  };\r\n\r\n  // format number to look like currency\r\n  formatNumber = num => {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n  };\r\n\r\n  // render Percentage of Total Sale Amount\r\n  renderTotalSale = total => {\r\n    const percent = (total / this.props.targetFirestore) * 100;\r\n\r\n    // If loading render 0\r\n    if (!this.props.targetFirestore)\r\n      return <div className=\"percent percent-green\">0%</div>;\r\n\r\n    // percentages is over than 50% render green text ;else red text\r\n    if (percent > 50) {\r\n      return (\r\n        <div className=\"percent percent-green\">{Math.floor(percent)}%</div>\r\n      );\r\n    } else {\r\n      return <div className=\"percent percent-red\">{Math.floor(percent)}%</div>;\r\n    }\r\n  };\r\n\r\n  // control form\r\n  onChange = e => {\r\n    this.setState({ editedTarget: e.target.value });\r\n  };\r\n\r\n  // Set new target\r\n  targetSubmit = e => {\r\n    const { showTargetForm, editedTarget } = this.state;\r\n    const { firestore } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    // New target is comming from the state (form input)\r\n    const updatedTarget = {\r\n      saleTarget: parseFloat(editedTarget)\r\n    };\r\n\r\n    // Update target in firestore\r\n    firestore.update(\r\n      { collection: 'target', doc: '9fAxGHgEhcL69sMxfDcA' },\r\n      updatedTarget\r\n    );\r\n\r\n    // close the form\r\n    this.setState({\r\n      showTargetForm: !showTargetForm\r\n    });\r\n  };\r\n\r\n  // show form edit target\r\n  renderTargetForm = () => {\r\n    const { editedTarget, showTargetForm } = this.state;\r\n\r\n    // Init targetForm\r\n    let targetForm = '';\r\n    // If target form should display\r\n    if (showTargetForm) {\r\n      targetForm = (\r\n        <form onSubmit={this.targetSubmit}>\r\n          <div className=\"input-group container\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"target\"\r\n              placeholder=\"Set Target\"\r\n              value={editedTarget}\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <input type=\"submit\" value=\"OK\" className=\"btn btn-info\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    } else {\r\n      targetForm = null;\r\n    }\r\n\r\n    return targetForm;\r\n  };\r\n\r\n  // render Target from firestore\r\n  renderTarget = () => {\r\n    const { targetFirestore } = this.props;\r\n\r\n    // declare target variable\r\n    let targetData = 0;\r\n    // If loaded format and return it\r\n    if (targetFirestore) {\r\n      targetData = (\r\n        <div className=\"text-target\">\r\n          {this.formatNumber(targetFirestore)} THB\r\n        </div>\r\n      );\r\n    } else {\r\n      targetData = <div className=\"text-target\">0 THB</div>;\r\n    }\r\n\r\n    return targetData;\r\n  };\r\n\r\n  render() {\r\n    const { showTargetForm } = this.state;\r\n    const { total } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col-md-7 text-center\">\r\n            <div className=\"card bg-dark card-height mb-resp-card d-flex justify-content-center\">\r\n              <div className=\"text-white text-target-label\">\r\n                TARGET{' '}\r\n                <span className=\"d-none d-lg-inline\">\r\n                  IN {this.renderMonth()} {this.renderYear()}\r\n                </span>{' '}\r\n                <small>\r\n                  <i\r\n                    // Toggle the form\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showTargetForm: !showTargetForm\r\n                      })\r\n                    }\r\n                    className=\"fas fa-pencil-alt text-warning btn-edit\"\r\n                  />\r\n                </small>\r\n              </div>\r\n              {this.renderTargetForm()}\r\n              {this.renderTarget()}\r\n              <div className=\"text-white text-target-label\">\r\n                TOTAL <span className=\"d-none d-md-inline\">SALE AMOUNT</span>\r\n              </div>\r\n              <div className=\"text-sale-amount\">\r\n                {this.formatNumber(total)} THB\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-5 text-center\">\r\n            <div className=\"card bg-dark card-height d-flex justify-content-center\">\r\n              <div className=\"text-target-label text-white\">SALE PROGRESS</div>\r\n              {this.renderTotalSale(total)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeaderClient.propTypes = {\r\n  targetFirestore: PropTypes.number\r\n};\r\n\r\n// get Target from redux store to props\r\nconst mapStateToProps = state => {\r\n  const { target } = state.firestore.ordered;\r\n\r\n  return {\r\n    targetFirestore: target && target[0].saleTarget\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'target' }]),\r\n  connect(mapStateToProps)\r\n)(HeaderClient);\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div\r\n      className=\"spinner-border text-primary d-block mx-auto\"\r\n      style={{ width: '5rem', height: '5rem' }}\r\n      role=\"status\"\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\n\r\nimport HeaderClient from './HeaderClient';\r\nimport Spinner from '../layouts/Spinner';\r\n\r\n// format number to look like currency\r\nconst formatNumber = num => {\r\n  return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n};\r\n\r\n// render table child with data from props ( firestore )\r\nconst renderClients = clients => {\r\n  // render each row of table with current item\r\n  return clients.map(client => (\r\n    <tr key={client.id}>\r\n      <td>{client.company}</td>\r\n      <td>{client.customerProduct}</td>\r\n      <td>{client.tier}</td>\r\n      <td>{formatNumber(client.saleAmount)}</td>\r\n      <td>\r\n        <Link to={`/clients/${client.id}`} className=\"btn btn-secondary\">\r\n          <i className=\"fas fa-angle-double-right\" /> Details\r\n        </Link>\r\n      </td>\r\n    </tr>\r\n  ));\r\n};\r\n\r\n// sum total saleAmount\r\nconst sumTotalSale = clients => {\r\n  // iterate over the clients[array] to sum total of sale amount\r\n  const total = clients.reduce((acc, client) => {\r\n    return acc + client.saleAmount;\r\n  }, 0);\r\n\r\n  return total;\r\n};\r\n\r\nconst Clients = props => {\r\n  const { clients, auth } = props;\r\n\r\n  // If still loading data from firestore render Loading spinner instread\r\n  if (clients) {\r\n    // Route Guard\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n      <>\r\n        <HeaderClient total={sumTotalSale(clients)} />\r\n        <div className=\"container mb-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h4>Client List</h4>\r\n                  <Link to=\"/clients/add\" className=\"btn btn-info\">\r\n                    <i className=\"fas fa-plus\" /> Add Client\r\n                  </Link>\r\n                </div>\r\n                <table className=\"table table-responsive w-100 d-md-table table-striped\">\r\n                  <thead className=\"thead-dark\">\r\n                    <tr>\r\n                      <th>Company</th>\r\n                      <th>Product</th>\r\n                      <th>Tier</th>\r\n                      <th>Sale Amount (THB)</th>\r\n                      <th />\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>{renderClients(clients)}</tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\n// pull [array] clients from reduxStore to props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    clients: state.firestore.ordered.clients,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// put the data in collection'clients' in firestore into reduxstore(firestore) and attach to this component ordered by most sale amount at the top\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect([\r\n    { collection: 'clients', orderBy: ['saleAmount', 'desc'] }\r\n  ]),\r\n  connect(mapStateToProps)\r\n)(Clients);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddClient extends Component {\r\n  state = {\r\n    company: '',\r\n    customerName: '',\r\n    customerProduct: '',\r\n    email: '',\r\n    phone: '',\r\n    tier: '',\r\n    saleAmount: 0\r\n  };\r\n\r\n  // Control input sync with state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Add new client to firestore\r\n  OnSubmitAdd = e => {\r\n    e.preventDefault();\r\n\r\n    const { history, firestore } = this.props;\r\n\r\n    // set new client from the form\r\n    const newClient = { ...this.state };\r\n\r\n    // Turn string to number\r\n    newClient.saleAmount = parseFloat(newClient.saleAmount);\r\n\r\n    // Add to firestore\r\n    firestore\r\n      // Add newClient obj to cellection 'clients\r\n      .add({ collection: 'clients' }, newClient)\r\n      // If add successfully redirect to main page\r\n      .then(() => history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto\">\r\n          <div className=\"card bg-dark mb-5 text-white\">\r\n            <div className=\"card-header\">\r\n              <h3>Add Client</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.OnSubmitAdd}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"company\">Company</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"company\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"10\"\r\n                        value={this.state.company}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Customer Company...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"customerName\">Customer's Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"customerName\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"8\"\r\n                        value={this.state.customerName}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Name of contact person...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"company\">Customer's Product</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"customerProduct\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"30\"\r\n                        value={this.state.customerProduct}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Product...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Customer Email...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"phone\">Phone Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"12\"\r\n                        value={this.state.phone}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Phone Number...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"tier\">Tier</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"tier\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"1\"\r\n                        value={this.state.tier}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Tier (A/B/C/D) \"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"saleAmount\">Sale Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"saleAmount\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={this.state.saleAmount}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Sale Amount...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddClient.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect(),\r\n  connect(mapStateToProps)\r\n)(AddClient);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ListItem = ({ parentState, onChange, placeholder, name, type }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className=\"form-control form-control-sm\"\r\n      name={name}\r\n      placeholder={placeholder}\r\n      value={parentState}\r\n      onChange={onChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n\r\nListItem.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nListItem.propTypes = {\r\n  parentState: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  placeholder: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ListItem from '../layouts/ListItem';\r\nimport Spinner from '../layouts/Spinner';\r\n\r\nclass Client extends Component {\r\n  state = {\r\n    customerName: '',\r\n    customerProduct: '',\r\n    email: '',\r\n    phone: '',\r\n    tier: '',\r\n    saleAmount: 0,\r\n    showEdit: false,\r\n    didUpdate: false\r\n  };\r\n\r\n  // get data from props and add it to state\r\n  componentDidUpdate() {\r\n    const { client } = this.props;\r\n\r\n    if (client) {\r\n      if (!this.state.didUpdate) {\r\n        this.setState({ ...client, didUpdate: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  // format number to look like currency\r\n  formatNumber = num => {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n  };\r\n\r\n  // Control input\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Update client\r\n  onUpdateSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      customerName,\r\n      customerProduct,\r\n      email,\r\n      phone,\r\n      tier,\r\n      saleAmount,\r\n      showEdit\r\n    } = this.state;\r\n\r\n    const { firestore, client } = this.props;\r\n\r\n    // Init updated Client\r\n    const updatedClient = {\r\n      customerName,\r\n      customerProduct,\r\n      email,\r\n      phone,\r\n      tier,\r\n      saleAmount\r\n    };\r\n\r\n    // turn to number\r\n    updatedClient.saleAmount = parseFloat(updatedClient.saleAmount);\r\n\r\n    // Update Client in firestore and then close the form\r\n    firestore\r\n      .update({ collection: 'clients', doc: client.id }, updatedClient)\r\n      .then(this.setState({ showEdit: !showEdit }));\r\n  };\r\n\r\n  // Toggle edit form\r\n  toggleEdit = () => {\r\n    this.setState({\r\n      showEdit: !this.state.showEdit\r\n    });\r\n  };\r\n\r\n  // Delete client from firestore and navigate to main page\r\n  onDeleteClick = () => {\r\n    const { client, history, firestore } = this.props;\r\n\r\n    firestore\r\n      .delete({ collection: 'clients', doc: client.id })\r\n      .then(history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    const {\r\n      saleAmount,\r\n      email,\r\n      phone,\r\n      customerName,\r\n      customerProduct,\r\n      tier,\r\n      showEdit\r\n    } = this.state;\r\n\r\n    const { client } = this.props;\r\n\r\n    // If loaded ;else render spinner\r\n    if (client) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 mx-auto\">\r\n            <div className=\"card bg-dark text-white\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <h3>{client.company}</h3>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                      <button\r\n                        onClick={this.toggleEdit}\r\n                        className=\"btn btn-warning\"\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        onClick={this.onDeleteClick}\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onUpdateSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-8 col-sm-6\">\r\n                      <div>Client ID: {client.id}</div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-6\">\r\n                      <div>\r\n                        Sale Amount: {this.formatNumber(client.saleAmount)} THB\r\n                      </div>\r\n                      {showEdit ? (\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"saleAmount\"\r\n                          placeholder=\"Sale Amount...\"\r\n                          value={saleAmount}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Contact Person: {client.customerName}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"customerName\"\r\n                          placeholder=\"Name...\"\r\n                          parentState={customerName}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Contact Email: {client.email}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          type=\"email\"\r\n                          placeholder=\"Email...\"\r\n                          name=\"email\"\r\n                          parentState={email}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Phone: {client.phone}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"phone\"\r\n                          placeholder=\"Phone Number...\"\r\n                          parentState={phone}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Product: {client.customerProduct}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"customerProduct\"\r\n                          placeholder=\"Customer Product...\"\r\n                          parentState={customerProduct}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Tier: {client.tier}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"tier\"\r\n                          placeholder=\"A/B/C/D\"\r\n                          parentState={tier}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    {showEdit ? (\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn btn-block btn-info mt-2\"\r\n                      />\r\n                    ) : null}\r\n                  </ul>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n\r\nClient.propTypes = {\r\n  client: PropTypes.object,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\n// get Client details from reduxstore ( filter by id )\r\nconst mapstateToProps = (state, ownProps) => {\r\n  const { client } = state.firestore.ordered;\r\n\r\n  return {\r\n    client: client && client[0],\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// get Client details from firestore to reduxstore ( filter by id from url )\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect(props => [\r\n    { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n  ]),\r\n  connect(mapstateToProps)\r\n)(Client);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    samePassword: false,\r\n    error: false\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSignUpSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n    const { email, password, confirmPassword } = this.state;\r\n\r\n    if (password === confirmPassword) {\r\n      // Register with firebase and add information to firestore\r\n      // If error set error message to state for render\r\n      firebase\r\n        .createUser({\r\n          email,\r\n          password\r\n        })\r\n        .catch(err => this.setState({ error: err.message }));\r\n    } else {\r\n      this.setState({\r\n        samePassword: true\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    // Route Guard\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    const {\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n      samePassword,\r\n      error\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-body\">\r\n              {error ? (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              ) : null}\r\n              <h1 className=\"text-center pb-3 pt-2\">\r\n                <i className=\"fas fa-user-plus\" /> Sign Up\r\n              </h1>\r\n              <form onSubmit={this.onSignUpSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"30\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    value={password}\r\n                    placeholder=\"Password must be 6 character or more...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {samePassword ? (\r\n                    <div className=\"text-danger\" role=\"alert\">\r\n                      Password Don't Match !\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"confirmPassword\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    placeholder=\"Password must be 6 character or more...\"\r\n                    value={confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {samePassword ? (\r\n                    <div className=\"text-danger\" role=\"alert\">\r\n                      Password Don't Match !\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Create Account\"\r\n                  className=\"mt-4 btn btn-info btn-block\"\r\n                />\r\n              </form>\r\n              <hr className=\"hr-white mt-4\" />\r\n              <div className=\"box\">\r\n                <p>Already Have An Account ?</p>\r\n                <Link to=\"/login\" className=\"btn btn-info btn-block\">\r\n                  Sign In\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSignUp.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    error: false\r\n  };\r\n\r\n  // Control input\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSignInSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    // Login & handle the error\r\n    firebase\r\n      .login({\r\n        email,\r\n        password\r\n      })\r\n      .then(res => this.setState({ error: false }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  };\r\n\r\n  render() {\r\n    // Route Guard\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    const { email, password, error } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-body\">\r\n              {error ? (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              ) : null}\r\n              <h1 className=\"text-center pb-3 pt-2\">\r\n                <i className=\"fas fa-sign-in-alt\" /> Sign In\r\n              </h1>\r\n              <form onSubmit={this.onSignInSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"30\"\r\n                    placeholder=\"Email...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    value={password}\r\n                    placeholder=\"Password...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Sign In\"\r\n                  className=\"mt-4 btn btn-info btn-block\"\r\n                />\r\n              </form>\r\n              <hr className=\"hr-white mt-5\" />\r\n              <div className=\"box\">\r\n                <p>Don't Have An Account ?</p>\r\n                <Link to=\"/signup\" className=\"btn btn-info btn-block\">\r\n                  Create Account\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(Login);\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-header\">\r\n              <h2>\r\n                How to use <i className=\"fas fa-question-circle\" />\r\n              </h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              You have to signup for create a user and then signin to use this\r\n              web application, You can ADD/EDIT/DELETE your customer also update\r\n              sale target in this month.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto mt-5\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-header\">\r\n              <h2>\r\n                Information <i className=\"fas fa-exclamation-circle\" />\r\n              </h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              This application buit and developed by Paphob\r\n              Aneakpoonsinsuk.Using React and Redux and Firebase to\r\n              developped.This aplication have a full CRUD operation by making\r\n              request on Firestore, In this aplication I used Firebase to manage\r\n              Authorization.\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <a\r\n                href=\"https://github.com/PaphobGun/clientmanager\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-info\"\r\n              >\r\n                Repository\r\n              </a>{' '}\r\n              Here is link to github repository.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"card bg-danger text-white\">\r\n      <div className=\"card-header\">\r\n        <h1>Error 404</h1>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        Incorrect url please go to main page or Login.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layouts/Navbar';\nimport Clients from './components/client/Clients';\nimport AddClient from './components/client/AddClient';\nimport Client from './components/client/Client';\nimport SignUp from './components/auth/SignUp';\nimport Login from './components/auth/Login';\nimport About from './components/layouts/About';\nimport Error404 from './components/layouts/Error404';\n\nimport './scss/App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"main-body\">\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Clients} />\n              <Route path=\"/clients/add\" exact component={AddClient} />\n              <Route path=\"/clients/:id\" exact component={Client} />\n              <Route path=\"/signup\" exact component={SignUp} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/about\" exact component={About} />\n              <Route component={Error404} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, compose } from 'redux';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n  apiKey: 'AIzaSyBf9fDKbxiSkRvSxOdybFMZEGOEMNNFFdI',\r\n  authDomain: 'clientmanager-80f3c.firebaseapp.com',\r\n  databaseURL: 'https://clientmanager-80f3c.firebaseio.com',\r\n  projectId: 'clientmanager-80f3c',\r\n  storageBucket: 'clientmanager-80f3c.appspot.com',\r\n  messagingSenderId: '145821546683'\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true\r\n};\r\n\r\n// Init firebase instance\r\nfirebase.initializeApp(config);\r\n// Init firestore\r\nfirebase.firestore();\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\n// set rootReducer to connect with firebaseReducer, firestoreReducer\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\n// Initial state\r\nconst initialState = {};\r\n\r\n// Create Store\r\n// add reduxdevtools and can be loaded even user haven't install reduxdevtools\r\nconst store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n      compose()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}