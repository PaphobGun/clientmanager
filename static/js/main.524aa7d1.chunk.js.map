{"version":3,"sources":["components/layouts/Navbar.js","components/client/HeaderClient.js","components/layouts/Spinner.js","components/client/Clients.js","components/client/AddClient.js","components/layouts/ListItem.js","components/client/Client.js","components/auth/SignUp.js","components/auth/Login.js","components/layouts/About.js","components/layouts/Error404.js","App.js","serviceWorker.js","store/store.js","index.js"],"names":["Navbar","onLogoutClick","e","preventDefault","_this","props","firebase","logout","renderLogInLogOut","auth","uid","react_default","a","createElement","Fragment","className","href","email","onClick","to","Link","renderMenu","type","data-toggle","data-target","id","this","Component","compose","firebaseConnect","connect","state","HeaderClient","showTargetForm","target","targetFirestore","editedTarget","renderMonth","Date","getMonth","toUpperCase","renderYear","getFullYear","formatNumber","num","toFixed","replace","renderTotalSale","total","percent","Math","floor","onChange","setState","value","targetSubmit","_this$state","firestore","updatedTarget","saleTarget","parseFloat","update","collection","doc","renderTargetForm","_this$state2","onSubmit","name","placeholder","renderTarget","_this2","firestoreConnect","ordered","Spinner","style","width","height","role","Clients","renderClients","clients","map","client","key","company","customerProduct","tier","saleAmount","concat","sumTotalSale","reduce","acc","client_HeaderClient","Redirect","layouts_Spinner","orderBy","AddClient","customerName","phone","Object","defineProperty","OnSubmitAdd","_this$props","history","newClient","objectSpread","add","then","push","htmlFor","required","maxLength","autoComplete","ListItem","_ref","parentState","defaultProps","Client","showEdit","didUpdate","onUpdateSubmit","updatedClient","toggleEdit","onDeleteClick","_this$props2","delete","layouts_ListItem","storeAs","match","params","ownProps","SignUp","password","confirmPassword","samePassword","error","onSignUpSubmit","createUser","catch","err","message","class","minLength","Login","onSignInSubmit","login","res","About","rel","Error404","App","BrowserRouter","basename","process","layouts_Navbar","Switch","Route","path","exact","component","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.524aa7d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\n\r\nclass Navbar extends Component {\r\n  // Logout from firebase\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n\r\n    firebase.logout();\r\n  };\r\n\r\n  // If user is logged dont' show sign out button ;else show sign in button\r\n  renderLogInLogOut = () => {\r\n    const { auth } = this.props;\r\n\r\n    if (auth.uid) {\r\n      return (\r\n        <>\r\n          <li className=\"nav-item mr-3\">\r\n            <a href=\"/#!\" className=\"btn btn-danger text-white\">\r\n              {auth.email}\r\n            </a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a\r\n              onClick={this.onLogoutClick}\r\n              href=\"#!\"\r\n              to=\"/login\"\r\n              className=\"nav-link\"\r\n            >\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/signup\" className=\"nav-link\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/login\" className=\"nav-link\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Render menu depends on user logged or not\r\n  renderMenu = () => {\r\n    const { auth } = this.props;\r\n\r\n    if (auth.uid) {\r\n      return (\r\n        <>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\" /> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/clients/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\" /> Add Client\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\" /> About\r\n            </Link>\r\n          </li>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <li className=\"nav-item\">\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question\" /> About\r\n          </Link>\r\n        </li>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-5\">\r\n        <div className=\"container py-2\">\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <span className=\"text-info\">\r\n              <i className=\"fas fa-users mr-1\" />\r\n            </span>\r\n            {'  '}\r\n            Client Manager\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbar\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n            <ul className=\"navbar-nav mr-auto\">{this.renderMenu()}</ul>\r\n            <ul className=\"navbar-nav ml-auto\">{this.renderLogInLogOut()}</ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\n\r\nclass HeaderClient extends Component {\r\n  // Init state\r\n  // target is comming from the firestore or default is 0\r\n  state = {\r\n    showTargetForm: false,\r\n    target: this.props.targetFirestore || 0,\r\n    editedTarget: 0\r\n  };\r\n\r\n  // render real time Month\r\n  renderMonth = () => {\r\n    const month = new Date().getMonth();\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'Octobe',\r\n      'November',\r\n      'December'\r\n    ];\r\n    return months[month].toUpperCase();\r\n  };\r\n\r\n  // render real time year\r\n  renderYear = () => {\r\n    return new Date().getFullYear();\r\n  };\r\n\r\n  // format number to look like currency\r\n  formatNumber = num => {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n  };\r\n\r\n  // render Percentage of Total Sale Amount\r\n  renderTotalSale = total => {\r\n    const percent = (total / this.props.targetFirestore) * 100;\r\n\r\n    // If loading render 0\r\n    if (!this.props.targetFirestore)\r\n      return <div className=\"percent percent-green\">0%</div>;\r\n\r\n    // percentages is over than 50% render green text ;else red text\r\n    if (percent > 50) {\r\n      return (\r\n        <div className=\"percent percent-green\">{Math.floor(percent)}%</div>\r\n      );\r\n    } else {\r\n      return <div className=\"percent percent-red\">{Math.floor(percent)}%</div>;\r\n    }\r\n  };\r\n\r\n  // control form\r\n  onChange = e => {\r\n    this.setState({ editedTarget: e.target.value });\r\n  };\r\n\r\n  // Set new target\r\n  targetSubmit = e => {\r\n    const { showTargetForm, editedTarget } = this.state;\r\n    const { firestore } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    // New target is comming from the state (form input)\r\n    const updatedTarget = {\r\n      saleTarget: parseFloat(editedTarget)\r\n    };\r\n\r\n    // Update target in firestore\r\n    firestore.update(\r\n      { collection: 'target', doc: '9fAxGHgEhcL69sMxfDcA' },\r\n      updatedTarget\r\n    );\r\n\r\n    // close the form\r\n    this.setState({\r\n      showTargetForm: !showTargetForm\r\n    });\r\n  };\r\n\r\n  // show form edit target\r\n  renderTargetForm = () => {\r\n    const { editedTarget, showTargetForm } = this.state;\r\n\r\n    // Init targetForm\r\n    let targetForm = '';\r\n    // If target form should display\r\n    if (showTargetForm) {\r\n      targetForm = (\r\n        <form onSubmit={this.targetSubmit}>\r\n          <div className=\"input-group container\">\r\n            <input\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              name=\"target\"\r\n              placeholder=\"Set Target\"\r\n              value={editedTarget}\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <input type=\"submit\" value=\"OK\" className=\"btn btn-info\" />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      );\r\n    } else {\r\n      targetForm = null;\r\n    }\r\n\r\n    return targetForm;\r\n  };\r\n\r\n  // render Target from firestore\r\n  renderTarget = () => {\r\n    const { targetFirestore } = this.props;\r\n\r\n    // declare target variable\r\n    let targetData = 0;\r\n    // If loaded format and return it\r\n    if (targetFirestore) {\r\n      targetData = (\r\n        <div className=\"text-target\">\r\n          {this.formatNumber(targetFirestore)} THB\r\n        </div>\r\n      );\r\n    } else {\r\n      targetData = <div className=\"text-target\">0 THB</div>;\r\n    }\r\n\r\n    return targetData;\r\n  };\r\n\r\n  render() {\r\n    const { showTargetForm } = this.state;\r\n    const { total } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row mb-5\">\r\n          <div className=\"col-md-7 text-center\">\r\n            <div className=\"card bg-dark card-height mb-resp-card d-flex justify-content-center\">\r\n              <div className=\"text-white text-target-label\">\r\n                TARGET{' '}\r\n                <span className=\"d-none d-lg-inline\">\r\n                  IN {this.renderMonth()} {this.renderYear()}\r\n                </span>{' '}\r\n                <small>\r\n                  <i\r\n                    // Toggle the form\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        showTargetForm: !showTargetForm\r\n                      })\r\n                    }\r\n                    className=\"fas fa-pencil-alt text-warning btn-edit\"\r\n                  />\r\n                </small>\r\n              </div>\r\n              {this.renderTargetForm()}\r\n              {this.renderTarget()}\r\n              <div className=\"text-white text-target-label\">\r\n                TOTAL <span className=\"d-none d-md-inline\">SALE AMOUNT</span>\r\n              </div>\r\n              <div className=\"text-sale-amount\">\r\n                {this.formatNumber(total)} THB\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-5 text-center\">\r\n            <div className=\"card bg-dark card-height d-flex justify-content-center\">\r\n              <div className=\"text-target-label text-white\">SALE PROGRESS</div>\r\n              {this.renderTotalSale(total)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// get Target from redux store to props\r\nconst mapStateToProps = state => {\r\n  const { target } = state.firestore.ordered;\r\n\r\n  return {\r\n    targetFirestore: target && target[0].saleTarget\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: 'target' }]),\r\n  connect(mapStateToProps)\r\n)(HeaderClient);\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div\r\n      className=\"spinner-border text-primary d-block mx-auto\"\r\n      style={{ width: '5rem', height: '5rem' }}\r\n      role=\"status\"\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\n\r\nimport HeaderClient from './HeaderClient';\r\nimport Spinner from '../layouts/Spinner';\r\n\r\nclass Clients extends Component {\r\n  // format number to look like currency\r\n  formatNumber = num => {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n  };\r\n\r\n  // render table child with data from props ( firestore )\r\n  renderClients = () => {\r\n    const { clients } = this.props;\r\n    // render each row of table with current item\r\n    return clients.map(client => (\r\n      <tr key={client.id}>\r\n        <td>{client.company}</td>\r\n        <td>{client.customerProduct}</td>\r\n        <td>{client.tier}</td>\r\n        <td>{this.formatNumber(client.saleAmount)}</td>\r\n        <td>\r\n          <Link to={`/clients/${client.id}`} className=\"btn btn-secondary\">\r\n            <i className=\"fas fa-angle-double-right\" /> Details\r\n          </Link>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  // sum total saleAmount\r\n  sumTotalSale = () => {\r\n    const { clients } = this.props;\r\n    // iterate over the clients[array] to sum total of sale amount\r\n    const total = clients.reduce((acc, client) => {\r\n      return acc + client.saleAmount;\r\n    }, 0);\r\n\r\n    return total;\r\n  };\r\n\r\n  render() {\r\n    // If still loading data from firestore render Loading spinner instread\r\n    if (this.props.clients) {\r\n      // Route Guard\r\n      const { auth } = this.props;\r\n      if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n      return (\r\n        <>\r\n          <HeaderClient total={this.sumTotalSale()} />\r\n          <div className=\"container mb-5\">\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header d-flex justify-content-between align-items-center\">\r\n                    <h4>Client List</h4>\r\n                    <Link to=\"/clients/add\" className=\"btn btn-info\">\r\n                      <i className=\"fas fa-plus\" /> Add Client\r\n                    </Link>\r\n                  </div>\r\n                  <table className=\"table table-responsive w-100 d-md-table table-striped\">\r\n                    <thead className=\"thead-dark\">\r\n                      <tr>\r\n                        <th>Company</th>\r\n                        <th>Product</th>\r\n                        <th>Tier</th>\r\n                        <th>Sale Amount (THB)</th>\r\n                        <th />\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>{this.renderClients()}</tbody>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n\r\n// pull [array] clients from reduxStore to props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    clients: state.firestore.ordered.clients,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// put the data in collection'clients' in firestore into reduxstore(firestore) and attach to this component ordered by most sale amount at the top\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect([\r\n    { collection: 'clients', orderBy: ['saleAmount', 'desc'] }\r\n  ]),\r\n  connect(mapStateToProps)\r\n)(Clients);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\n\r\nclass AddClient extends Component {\r\n  state = {\r\n    company: '',\r\n    customerName: '',\r\n    customerProduct: '',\r\n    email: '',\r\n    phone: '',\r\n    tier: '',\r\n    saleAmount: 0\r\n  };\r\n\r\n  // Control input sync with state\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Add new client to firestore\r\n  OnSubmitAdd = e => {\r\n    e.preventDefault();\r\n\r\n    const { history, firestore } = this.props;\r\n\r\n    // set new client from the form\r\n    const newClient = { ...this.state };\r\n\r\n    // Turn string to number\r\n    newClient.saleAmount = parseFloat(newClient.saleAmount);\r\n\r\n    // Add to firestore\r\n    firestore\r\n      // Add newClient obj to cellection 'clients\r\n      .add({ collection: 'clients' }, newClient)\r\n      // If add successfully redirect to main page\r\n      .then(() => history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto\">\r\n          <div className=\"card bg-dark mb-5 text-white\">\r\n            <div className=\"card-header\">\r\n              <h3>Add Client</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <form onSubmit={this.OnSubmitAdd}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"company\">Company</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"company\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"10\"\r\n                        value={this.state.company}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Customer Company...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"customerName\">Customer's Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"customerName\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"8\"\r\n                        value={this.state.customerName}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Name of contact person...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"company\">Customer's Product</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"customerProduct\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"30\"\r\n                        value={this.state.customerProduct}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Product...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Customer Email...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"phone\">Phone Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"12\"\r\n                        value={this.state.phone}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Phone Number...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"tier\">Tier</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"tier\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        maxLength=\"1\"\r\n                        value={this.state.tier}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Tier (A/B/C/D) \"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"container\">\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"saleAmount\">Sale Amount</label>\r\n                      <input\r\n                        type=\"number\"\r\n                        name=\"saleAmount\"\r\n                        className=\"form-control\"\r\n                        required\r\n                        value={this.state.saleAmount}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Sale Amount...\"\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect(),\r\n  connect(mapStateToProps)\r\n)(AddClient);\r\n","import React from 'react';\r\n\r\nconst ListItem = ({ parentState, onChange, placeholder, name, type }) => {\r\n  return (\r\n    <input\r\n      type={type}\r\n      className=\"form-control form-control-sm\"\r\n      name={name}\r\n      placeholder={placeholder}\r\n      value={parentState}\r\n      onChange={onChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  );\r\n};\r\n\r\nListItem.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect, firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport ListItem from '../layouts/ListItem';\r\nimport Spinner from '../layouts/Spinner';\r\n\r\nclass Client extends Component {\r\n  state = {\r\n    customerName: '',\r\n    customerProduct: '',\r\n    email: '',\r\n    phone: '',\r\n    tier: '',\r\n    saleAmount: 0,\r\n    showEdit: false,\r\n    didUpdate: false\r\n  };\r\n\r\n  // get data from props and add it to state\r\n  componentDidUpdate() {\r\n    const { client } = this.props;\r\n\r\n    if (client) {\r\n      if (!this.state.didUpdate) {\r\n        this.setState({ ...client, didUpdate: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  // format number to look like currency\r\n  formatNumber = num => {\r\n    return num.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n  };\r\n\r\n  // Control input\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  // Update client\r\n  onUpdateSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      customerName,\r\n      customerProduct,\r\n      email,\r\n      phone,\r\n      tier,\r\n      saleAmount,\r\n      showEdit\r\n    } = this.state;\r\n\r\n    const { firestore, client } = this.props;\r\n\r\n    // Init updated Client\r\n    const updatedClient = {\r\n      customerName,\r\n      customerProduct,\r\n      email,\r\n      phone,\r\n      tier,\r\n      saleAmount\r\n    };\r\n\r\n    // turn to number\r\n    updatedClient.saleAmount = parseFloat(updatedClient.saleAmount);\r\n\r\n    // Update Client in firestore and then close the form\r\n    firestore\r\n      .update({ collection: 'clients', doc: client.id }, updatedClient)\r\n      .then(this.setState({ showEdit: !showEdit }));\r\n  };\r\n\r\n  // Toggle edit form\r\n  toggleEdit = () => {\r\n    this.setState({\r\n      showEdit: !this.state.showEdit\r\n    });\r\n  };\r\n\r\n  // Delete client from firestore and navigate to main page\r\n  onDeleteClick = () => {\r\n    const { client, history, firestore } = this.props;\r\n\r\n    firestore\r\n      .delete({ collection: 'clients', doc: client.id })\r\n      .then(history.push('/'));\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n    const {\r\n      saleAmount,\r\n      email,\r\n      phone,\r\n      customerName,\r\n      customerProduct,\r\n      tier,\r\n      showEdit\r\n    } = this.state;\r\n\r\n    const { client } = this.props;\r\n\r\n    // If loaded ;else render spinner\r\n    if (client) {\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-md-9 mx-auto\">\r\n            <div className=\"card bg-dark text-white\">\r\n              <div className=\"card-header\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <h3>{client.company}</h3>\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <div className=\"btn-group float-right\">\r\n                      <button\r\n                        onClick={this.toggleEdit}\r\n                        className=\"btn btn-warning\"\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button\r\n                        onClick={this.onDeleteClick}\r\n                        className=\"btn btn-danger\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onUpdateSubmit}>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-8 col-sm-6\">\r\n                      <div>Client ID: {client.id}</div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-sm-6\">\r\n                      <div>\r\n                        Sale Amount: {this.formatNumber(client.saleAmount)} THB\r\n                      </div>\r\n                      {showEdit ? (\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"form-control form-control-sm\"\r\n                          name=\"saleAmount\"\r\n                          placeholder=\"Sale Amount...\"\r\n                          value={saleAmount}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Contact Person: {client.customerName}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"customerName\"\r\n                          placeholder=\"Name...\"\r\n                          parentState={customerName}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Contact Email: {client.email}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          type=\"email\"\r\n                          placeholder=\"Email...\"\r\n                          name=\"email\"\r\n                          parentState={email}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Phone: {client.phone}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"phone\"\r\n                          placeholder=\"Phone Number...\"\r\n                          parentState={phone}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Product: {client.customerProduct}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"customerProduct\"\r\n                          placeholder=\"Customer Product...\"\r\n                          parentState={customerProduct}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    <li className=\"list-group-item list-group-item-dark\">\r\n                      Tier: {client.tier}\r\n                      {showEdit ? (\r\n                        <ListItem\r\n                          name=\"tier\"\r\n                          placeholder=\"A/B/C/D\"\r\n                          parentState={tier}\r\n                          onChange={this.onChange}\r\n                        />\r\n                      ) : null}\r\n                    </li>\r\n                    {showEdit ? (\r\n                      <input\r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn btn-block btn-info mt-2\"\r\n                      />\r\n                    ) : null}\r\n                  </ul>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Spinner />;\r\n    }\r\n  }\r\n}\r\n\r\n// get Client details from reduxstore ( filter by id )\r\nconst mapstateToProps = (state, ownProps) => {\r\n  const { client } = state.firestore.ordered;\r\n\r\n  return {\r\n    client: client && client[0],\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\n// get Client details from firestore to reduxstore ( filter by id from url )\r\nexport default compose(\r\n  firebaseConnect(),\r\n  firestoreConnect(props => [\r\n    { collection: 'clients', storeAs: 'client', doc: props.match.params.id }\r\n  ]),\r\n  connect(mapstateToProps)\r\n)(Client);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    samePassword: false,\r\n    error: false\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSignUpSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n    const { email, password, confirmPassword } = this.state;\r\n\r\n    if (password === confirmPassword) {\r\n      // Register with firebase and add information to firestore\r\n      // If error set error message to state for render\r\n      firebase\r\n        .createUser({\r\n          email,\r\n          password\r\n        })\r\n        .catch(err => this.setState({ error: err.message }));\r\n    } else {\r\n      this.setState({\r\n        samePassword: true\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    // Route Guard\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    const {\r\n      email,\r\n      password,\r\n      confirmPassword,\r\n      samePassword,\r\n      error\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-body\">\r\n              {error ? (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              ) : null}\r\n              <h1 className=\"text-center pb-3 pt-2\">\r\n                <i className=\"fas fa-user-plus\" /> Sign Up\r\n              </h1>\r\n              <form onSubmit={this.onSignUpSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"30\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    value={password}\r\n                    placeholder=\"Password must be 6 character or more...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {samePassword ? (\r\n                    <div className=\"text-danger\" role=\"alert\">\r\n                      Password Don't Match !\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"confirmPassword\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    placeholder=\"Password must be 6 character or more...\"\r\n                    value={confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {samePassword ? (\r\n                    <div className=\"text-danger\" role=\"alert\">\r\n                      Password Don't Match !\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Register\"\r\n                  className=\"mt-3 btn btn-info btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firebaseConnect } from 'react-redux-firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    error: false\r\n  };\r\n\r\n  // Control input\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSignInSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { firebase } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    // Login & handle the error\r\n    firebase\r\n      .login({\r\n        email,\r\n        password\r\n      })\r\n      .then(res => this.setState({ error: false }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  };\r\n\r\n  render() {\r\n    // Route Guard\r\n    const { auth } = this.props;\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n    const { email, password, error } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-body\">\r\n              {error ? (\r\n                <div class=\"alert alert-danger\" role=\"alert\">\r\n                  {error}\r\n                </div>\r\n              ) : null}\r\n              <h1 className=\"text-center pb-3 pt-2\">\r\n                <i className=\"fas fa-sign-in-alt\" /> Sign In\r\n              </h1>\r\n              <form onSubmit={this.onSignInSubmit}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    required\r\n                    value={email}\r\n                    autoComplete=\"off\"\r\n                    maxLength=\"30\"\r\n                    placeholder=\"Email...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    required\r\n                    minLength=\"6\"\r\n                    value={password}\r\n                    placeholder=\"Password...\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Sign In\"\r\n                  className=\"mt-3 btn btn-info btn-block\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateToProps)\r\n)(Login);\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-header\">\r\n              <h2>\r\n                How to use <i className=\"fas fa-question-circle\" />\r\n              </h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              You have to signup for create a user and then signin to use this\r\n              web application, You can ADD/EDIT/DELETE your customer also update\r\n              sale target in this month.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9 mx-auto mt-5\">\r\n          <div className=\"card bg-dark text-white\">\r\n            <div className=\"card-header\">\r\n              <h2>\r\n                Information <i className=\"fas fa-exclamation-circle\" />\r\n              </h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              This application buit and developed by Paphob\r\n              Aneakpoonsinsuk.Using React and Redux and Firebase to\r\n              developped.This aplication have a full CRUD operation by making\r\n              request on Firestore, In this aplication I used Firebase to manage\r\n              Authorization.\r\n            </div>\r\n            <div className=\"card-footer\">\r\n              <a\r\n                href=\"https://github.com/PaphobGun/clientmanager\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-info\"\r\n              >\r\n                Repository\r\n              </a>{' '}\r\n              Here is link to github repository.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Error404 = () => {\r\n  return (\r\n    <div className=\"card bg-danger text-white\">\r\n      <div className=\"card-header\">\r\n        <h1>Error 404</h1>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        Incorrect url please go to main page or Login.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './components/layouts/Navbar';\nimport Clients from './components/client/Clients';\nimport AddClient from './components/client/AddClient';\nimport Client from './components/client/Client';\nimport SignUp from './components/auth/SignUp';\nimport Login from './components/auth/Login';\nimport About from './components/layouts/About';\nimport Error404 from './components/layouts/Error404';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"main-body\">\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/\" exact component={Clients} />\n              <Route path=\"/clients/add\" exact component={AddClient} />\n              <Route path=\"/clients/:id\" exact component={Client} />\n              <Route path=\"/signup\" exact component={SignUp} />\n              <Route path=\"/login\" exact component={Login} />\n              <Route path=\"/about\" exact component={About} />\n              <Route component={Error404} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers, compose } from 'redux';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Initialize Firebase\r\nconst config = {\r\n  apiKey: 'AIzaSyBf9fDKbxiSkRvSxOdybFMZEGOEMNNFFdI',\r\n  authDomain: 'clientmanager-80f3c.firebaseapp.com',\r\n  databaseURL: 'https://clientmanager-80f3c.firebaseio.com',\r\n  projectId: 'clientmanager-80f3c',\r\n  storageBucket: 'clientmanager-80f3c.appspot.com',\r\n  messagingSenderId: '145821546683'\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true\r\n};\r\n\r\n// Init firebase instance\r\nfirebase.initializeApp(config);\r\n// Init firestore\r\nfirebase.firestore();\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n  reduxFirestore(firebase)\r\n)(createStore);\r\n\r\n// set rootReducer to connect with firebaseReducer, firestoreReducer\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\n// Initial state\r\nconst initialState = {};\r\n\r\n// Create Store\r\n// add reduxdevtools and can be loaded even user haven't install reduxdevtools\r\nconst store = createStoreWithFirebase(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    reactReduxFirebase(firebase),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION__()) ||\r\n      compose()\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/js/bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}